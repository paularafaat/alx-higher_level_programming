The ``2-matrix_divided`` module
============================

using ``matrix_divided``
---------------------

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Testing integer values
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Testing float values
    >>> matrix_divided([[5, 2.5],[3, 9.3]], 2)
    [[2.5, 1.25], [1.5, 4.65]]

Testing negative values
    >>> matrix_divided([[-5, 0],[-99, -88.5]], 2)
    [[-2.5, 0.0], [-49.5, -44.25]]

another Testing negative values
    >>> matrix_divided([[-34, -93],[-23, -43]], -3)
    [[11.33, 31.0], [7.67, 14.33]]

Testing empty list
    >>> matrix_divided([[]], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing division by zero
    >>> matrix_divided([[23, 23],[23, 34]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero
    
Testing string arg
    >>> matrix_divided([['antesh', 3],['waagry', 4]], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


Testing division by string
    >>> matrix_divided([[23, 23],[23, 34]], "hello")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Testing the size of each row
    >>> matrix_divided([[23, 23],[23, 34, 43]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Testing one argument
    >>> matrix_divided([[23, 23],[23, 34]], None)
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Testing one argument
    >>> matrix_divided(None, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing no argument
    >>> matrix_divided(None, None)
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Testing float inf
    >>> matrix_divided([[5, 2.5],[3, 9.3]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]
